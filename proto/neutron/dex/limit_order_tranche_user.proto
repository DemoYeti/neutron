syntax = "proto3";
package neutron.dex;

option go_package = "github.com/neutron-org/neutron/x/dex/types";
import "gogoproto/gogo.proto";
import "neutron/dex/trade_pair_id.proto";
import "neutron/dex/tx.proto";

message LimitOrderTrancheUser {
  TradePairID trade_pair_id = 1;
  int64 tick_index_taker_to_maker = 2;
  string tranche_key = 3;
  string address = 4; 
  string shares_owned = 5  [
      (gogoproto.moretags)   = "yaml:\"sharesOwned\"",
      (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
      (gogoproto.nullable)   = false,
      (gogoproto.jsontag) = "sharesOwned"
  ];  
  string shares_withdrawn = 6  [
      (gogoproto.moretags)   = "yaml:\"sharesWithdrawn\"",
      (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
      (gogoproto.nullable)   = false,
      (gogoproto.jsontag) = "sharesWithdrawn"
  ]; 
  string shares_cancelled = 7  [
      (gogoproto.moretags)   = "yaml:\"sharesCancelled\"",
      (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
      (gogoproto.nullable)   = false,
      (gogoproto.jsontag) = "sharesCancelled"
  ];
  LimitOrderType order_type = 8;
}

