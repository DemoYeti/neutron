syntax = "proto3";
package lidofinance.interchainadapter.interchainqueries;

import "tendermint/crypto/proof.proto";

// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/lidofinance/interchain-adapter/x/interchainqueries/types";

// Msg defines the Msg service.
service Msg {
  rpc RegisterInterchainQuery(MsgRegisterInterchainQuery) returns (MsgRegisterInterchainQueryResponse);
  rpc SubmitQueryResult(MsgSubmitQueryResult) returns (MsgSubmitQueryResultResponse);
  // this line is used by starport scaffolding # proto/tx/rpc
}

// this line is used by starport scaffolding # proto/tx/message

message MsgRegisterInterchainQuery {
  string query_data = 1;
  string query_type = 2;
  string zone_id = 3;
  uint64 update_period = 4;
}

message MsgRegisterInterchainQueryResponse {
  uint64 id = 1;
}

message MsgSubmitQueryResult {
  uint64 id = 1;
  uint64 height = 2;

  repeated StorageValue KVResults = 3;
}

message StorageValue {
  bytes key = 1;
  bytes value = 2;

  tendermint.crypto.ProofOps Proof = 3;
}

message MsgSubmitQueryResultResponse {

}