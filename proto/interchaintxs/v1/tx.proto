syntax = "proto3";
package neutron.interchainadapter.interchaintxs.v1;

option go_package = "github.com/neutron-org/neutron/x/interchaintxs/types";

import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "google/api/http.proto";
import "google/api/annotations.proto";
import "google/protobuf/any.proto";

// Msg defines the Msg service.
service Msg {
  rpc RegisterInterchainAccount(MsgRegisterInterchainAccount)
      returns (MsgRegisterInterchainAccountResponse) {
    option (google.api.http) = {
      post : "/neutron/interchainadapter/interchaintxs/tx/v1/register/"
             "interchain/account"
      body : "*"
    };
  };
  rpc SubmitTx(MsgSubmitTx) returns (MsgSubmitTxResponse) {
    option (google.api.http) = {
      post : "/neutron/interchainadapter/interchaintxs/tx/v1/submit/tx"
      body : "*"
    };
  };
}

// MsgRegisterInterchainAccount is used to register an account on a remote zone.
message MsgRegisterInterchainAccount {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string from_address = 1;
  string connection_id = 2 [ (gogoproto.moretags) = "yaml:\"connection_id\"" ];
  string interchain_account_id = 3 [ (gogoproto.moretags) = "yaml:\"interchain_account_id\"" ];
}

// MsgRegisterInterchainAccountResponse is the response type for
// MsgRegisterInterchainAccount.
message MsgRegisterInterchainAccountResponse {}

// MsgSubmitTx defines the payload for Msg/SubmitTx
message MsgSubmitTx {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string from_address = 1;
  // interchain_account_id is supposed to be the unique identifier, e.g., lido/kava.
  // This allows contracts to have more than one interchain accounts on remote zone
  // This identifier will be a part of the portID that we'll claim our
  // capability for.
  string interchain_account_id = 2;
  string connection_id = 3;
  repeated google.protobuf.Any msgs = 4;
  string memo = 5;
}

// MsgSubmitTxResponse defines the response for Msg/SubmitTx
message MsgSubmitTxResponse {}