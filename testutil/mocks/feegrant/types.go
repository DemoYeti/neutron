// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cosmos/cosmos-sdk/x/feegrant (interfaces: FeeAllowanceI)

// Package mock_feegrant is a generated GoMock package.
package mock_feegrant

import (
	reflect "reflect"

	types "github.com/cosmos/cosmos-sdk/types"
	gomock "github.com/golang/mock/gomock"
)

// MockFeeAllowanceI is a mock of FeeAllowanceI interface.
type MockFeeAllowanceI struct {
	ctrl     *gomock.Controller
	recorder *MockFeeAllowanceIMockRecorder
}

// MockFeeAllowanceIMockRecorder is the mock recorder for MockFeeAllowanceI.
type MockFeeAllowanceIMockRecorder struct {
	mock *MockFeeAllowanceI
}

// NewMockFeeAllowanceI creates a new mock instance.
func NewMockFeeAllowanceI(ctrl *gomock.Controller) *MockFeeAllowanceI {
	mock := &MockFeeAllowanceI{ctrl: ctrl}
	mock.recorder = &MockFeeAllowanceIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFeeAllowanceI) EXPECT() *MockFeeAllowanceIMockRecorder {
	return m.recorder
}

// Accept mocks base method.
func (m *MockFeeAllowanceI) Accept(arg0 types.Context, arg1 types.Coins, arg2 []types.Msg) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Accept", arg0, arg1, arg2)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Accept indicates an expected call of Accept.
func (mr *MockFeeAllowanceIMockRecorder) Accept(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Accept", reflect.TypeOf((*MockFeeAllowanceI)(nil).Accept), arg0, arg1, arg2)
}

// ValidateBasic mocks base method.
func (m *MockFeeAllowanceI) ValidateBasic() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateBasic")
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateBasic indicates an expected call of ValidateBasic.
func (mr *MockFeeAllowanceIMockRecorder) ValidateBasic() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateBasic", reflect.TypeOf((*MockFeeAllowanceI)(nil).ValidateBasic))
}
